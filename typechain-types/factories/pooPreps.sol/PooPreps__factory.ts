/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PooPreps, PooPrepsInterface } from "../../pooPreps.sol/PooPreps";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxCumulativeBalanceExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_abTrigger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getMaxCumulativeBalanceForAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "remainingAllowedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600080546001600160a01b03191633179055604080518082019091526009815268506f6f20507265707360b81b602082015260079062000053908262000180565b50604080518082019091526002815261050560f41b60208201526008906200007c908262000180565b506009805460ff191660121790553360009081526001602052604090206c054e739ef2d4e77128a290000090819055600455600680546001600160a81b03191674c36442b4a4522e871399cd717abdd847ab11fe88001790556200024c565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010657607f821691505b6020821081036200012757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017b57600081815260208120601f850160051c81016020861015620001565750805b601f850160051c820191505b81811015620001775782815560010162000162565b5050505b505050565b81516001600160401b038111156200019c576200019c620000db565b620001b481620001ad8454620000f1565b846200012d565b602080601f831160018114620001ec5760008415620001d35750858301515b600019600386901b1c1916600185901b17855562000177565b600085815260208120601f198616915b828110156200021d57888601518255948401946001909101908401620001fc565b50858210156200023c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610df1806200025c6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806392eefe9b116100a2578063cc6862f811610071578063cc6862f81461024d578063d54f7d5e1461025a578063dd62ed3e14610262578063f45e907e1461029b578063fee406d5146102ae57600080fd5b806392eefe9b1461020c57806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a57600080fd5b80633018205f116100e95780633018205f14610181578063313ce567146101a657806339509351146101bb57806341cb87fc146101ce57806370a08231146101e357600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102c1565b6040516101309190610b53565b60405180910390f35b61014c610147366004610bbd565b610353565b6040519015158152602001610130565b6004545b604051908152602001610130565b61014c61017c366004610be7565b61036a565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610130565b60095460405160ff9091168152602001610130565b61014c6101c9366004610bbd565b6103bb565b6101e16101dc366004610c23565b6103f1565b005b6101606101f1366004610c23565b6001600160a01b031660009081526001602052604090205490565b6101e161021a366004610c23565b61044c565b61012361051a565b61014c610235366004610bbd565b610529565b61014c610248366004610bbd565b61055f565b60065461014c9060ff1681565b61018e61056c565b610160610270366004610c3e565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6101606102a9366004610c23565b6105ac565b6101606102bc366004610c23565b61060f565b6060600780546102d090610c71565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc90610c71565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050505050905090565b600061036033848461075a565b5060015b92915050565b600061037784848461087f565b6001600160a01b0384166000908152600360209081526040808320338085529252909120546103b19186916103ac9086610aa6565b61075a565b5060019392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916103609185906103ac9086610ac2565b6000546001600160a01b031633146104245760405162461bcd60e51b815260040161041b90610cab565b60405180910390fd5b600680546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000546001600160a01b031633146104765760405162461bcd60e51b815260040161041b90610cab565b6001600160a01b0381166104bf5760405162461bcd60e51b815260206004820152601060248201526f4552525f5a45524f5f4144445245535360801b604482015260640161041b565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6060600880546102d090610c71565b3360008181526003602090815260408083206001600160a01b038716845290915281205490916103609185906103ac9086610aa6565b600061036033848461087f565b600080546001600160a01b031633146105975760405162461bcd60e51b815260040161041b90610cab565b5060065461010090046001600160a01b031690565b6000806105b88361060f565b6001600160a01b038416600090815260026020526040902054909150811115610606576001600160a01b0383166000908152600260205260409020546105ff908290610aa6565b9392505050565b50600092915050565b60006019600554436106219190610ced565b61062c906001610d00565b1061063957600454610364565b6040516bffffffffffffffffffffffff19606084901b1660208201526b0b46dc3f1945bf8ce2000000906b0b576769456dc21d76000000906000906034016040516020818303038152906040529050600081600183516106999190610ced565b815181106106a9576106a9610d13565b016020015160f81c9050600160068214806106c757508160ff166098145b806106d557508160ff1660aa145b806106e357508160ff1660c1145b806106f157508160ff1660da145b156106fe57506005610717565b610709600483610d3f565b610714906001610d61565b90505b61074f8561074961072b8760ff8616610ae0565b6005546107389043610ced565b610743906001610d00565b90610ae0565b90610aa6565b979650505050505050565b6001600160a01b0383166107bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161041b565b6001600160a01b03821661081d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161041b565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041b565b6001600160a01b0382166109455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041b565b60065460ff16801561095e575061095b826105ac565b81115b1561097c57604051635f8c625960e01b815260040160405180910390fd5b60065460ff161580156109a157506006546001600160a01b0383811661010090920416145b156109ae576109ae610b16565b6001600160a01b0383166000908152600160205260409020546109d19082610aa6565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a009082610ac2565b6001600160a01b03831660009081526001602052604090205560065460ff1615610a61576001600160a01b038216600090815260026020526040902054610a479082610ac2565b6001600160a01b0383166000908152600260205260409020555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161087291815260200190565b600082821115610ab857610ab8610d7a565b6105ff8284610ced565b6000610ace8284610d00565b90508281101561036457610364610d7a565b600082600003610af257506000610364565b610afc8284610d90565b905081610b098483610da7565b1461036457610364610d7a565b6000546001600160a01b03163314610b405760405162461bcd60e51b815260040161041b90610cab565b436005556006805460ff19166001179055565b600060208083528351808285015260005b81811015610b8057858101830151858201604001528201610b64565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bb857600080fd5b919050565b60008060408385031215610bd057600080fd5b610bd983610ba1565b946020939093013593505050565b600080600060608486031215610bfc57600080fd5b610c0584610ba1565b9250610c1360208501610ba1565b9150604084013590509250925092565b600060208284031215610c3557600080fd5b6105ff82610ba1565b60008060408385031215610c5157600080fd5b610c5a83610ba1565b9150610c6860208401610ba1565b90509250929050565b600181811c90821680610c8557607f821691505b602082108103610ca557634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526012908201527122a9292fa727aa2fa1a7a72a2927a62622a960711b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561036457610364610cd7565b8082018082111561036457610364610cd7565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600060ff831680610d5257610d52610d29565b8060ff84160691505092915050565b60ff818116838216019081111561036457610364610cd7565b634e487b7160e01b600052600160045260246000fd5b808202811582820484141761036457610364610cd7565b600082610db657610db6610d29565b50049056fea26469706673582212202d15c1a84490da06d1753d0a110954f194fefb6b15f346e8496ff4de2328d6f364736f6c63430008120033";

type PooPrepsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PooPrepsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PooPreps__factory extends ContractFactory {
  constructor(...args: PooPrepsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PooPreps> {
    return super.deploy(overrides || {}) as Promise<PooPreps>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PooPreps {
    return super.attach(address) as PooPreps;
  }
  override connect(signer: Signer): PooPreps__factory {
    return super.connect(signer) as PooPreps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PooPrepsInterface {
    return new utils.Interface(_abi) as PooPrepsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PooPreps {
    return new Contract(address, _abi, signerOrProvider) as PooPreps;
  }
}
