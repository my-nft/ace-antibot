/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TestToken,
  TestTokenInterface,
} from "../../test_token.sol/TestToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxCumulativeBalanceExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maxCumulativeBalance",
        type: "uint256",
      },
    ],
    name: "NewMaxCumulativeBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxCumulativeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "remainingAllowedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxCumulativeBalance",
        type: "uint256",
      },
    ],
    name: "setMaxCumulativeBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e2238038062000e22833981016040819052620000349162000167565b600080546001600160a01b03191633179055600662000054838262000260565b50600762000063828262000260565b50506008805460ff19166012179055503360009081526001602052604090206aa56fa5b99019a5c800000090819055600455620186a06005556200032c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ca57600080fd5b81516001600160401b0380821115620000e757620000e7620000a2565b604051601f8301601f19908116603f01168101908282118183101715620001125762000112620000a2565b816040528381526020925086838588010111156200012f57600080fd5b600091505b8382101562000153578582018301518183018401529082019062000134565b600093810190920192909252949350505050565b600080604083850312156200017b57600080fd5b82516001600160401b03808211156200019357600080fd5b620001a186838701620000b8565b93506020850151915080821115620001b857600080fd5b50620001c785828601620000b8565b9150509250929050565b600181811c90821680620001e657607f821691505b6020821081036200020757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025b57600081815260208120601f850160051c81016020861015620002365750805b601f850160051c820191505b81811015620002575782815560010162000242565b5050505b505050565b81516001600160401b038111156200027c576200027c620000a2565b62000294816200028d8454620001d1565b846200020d565b602080601f831160018114620002cc5760008415620002b35750858301515b600019600386901b1c1916600185901b17855562000257565b600085815260208120601f198616915b82811015620002fd57888601518255948401946001909101908401620002dc565b50858210156200031c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610ae6806200033c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063671c273611610097578063a457c2d711610066578063a457c2d71461020f578063a9059cbb14610222578063dd62ed3e14610235578063f45e907e1461026e57600080fd5b8063671c2736146101b657806370a08231146101cb57806392eefe9b146101f457806395d89b411461020757600080fd5b806323b872dd116100d357806323b872dd146101605780633018205f14610173578063313ce5671461018e57806339509351146101a357600080fd5b806306fdde0314610105578063095ea7b3146101235780630ed117e81461014657806318160ddd14610158575b600080fd5b61010d610281565b60405161011a91906108a7565b60405180910390f35b610136610131366004610911565b610313565b604051901515815260200161011a565b6005545b60405190815260200161011a565b60045461014a565b61013661016e36600461093b565b61032a565b6000546040516001600160a01b03909116815260200161011a565b60085460405160ff909116815260200161011a565b6101366101b1366004610911565b61037b565b6101c96101c4366004610977565b6103b1565b005b61014a6101d9366004610990565b6001600160a01b031660009081526001602052604090205490565b6101c9610202366004610990565b610438565b61010d61052b565b61013661021d366004610911565b61053a565b610136610230366004610911565b610570565b61014a6102433660046109ab565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b61014a61027c366004610990565b61057d565b606060068054610290906109de565b80601f01602080910402602001604051908101604052809291908181526020018280546102bc906109de565b80156103095780601f106102de57610100808354040283529160200191610309565b820191906000526020600020905b8154815290600101906020018083116102ec57829003601f168201915b5050505050905090565b60006103203384846105d5565b5060015b92915050565b60006103378484846106fa565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461037191869161036c9086610866565b6105d5565b5060019392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161032091859061036c9086610889565b6000546001600160a01b031633146104055760405162461bcd60e51b815260206004820152601260248201527122a9292fa727aa2fa1a7a72a2927a62622a960711b60448201526064015b60405180910390fd5b600581905560405181907f18d95c6b437ca32526cb46d1a1dc41fe36d82c0881fd096727557fe1b0e0650490600090a250565b6000546001600160a01b031633146104875760405162461bcd60e51b815260206004820152601260248201527122a9292fa727aa2fa1a7a72a2927a62622a960711b60448201526064016103fc565b6001600160a01b0381166104d05760405162461bcd60e51b815260206004820152601060248201526f4552525f5a45524f5f4144445245535360801b60448201526064016103fc565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b606060078054610290906109de565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161032091859061036c9086610866565b60006103203384846106fa565b6001600160a01b038116600081815260026020908152604080832054600554825193840195909552929391016040516020818303038152906040526105c190610a18565b6105cb9190610a3c565b6103249190610a74565b6001600160a01b0383166106375760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166106985760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661075e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166107c05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b0383166000908152600160205260409020546107e39082610866565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546108129082610889565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106ed9085815260200190565b60008282111561087857610878610a87565b6108828284610a74565b9392505050565b60006108958284610a9d565b90508281101561032457610324610a87565b600060208083528351808285015260005b818110156108d4578581018301518582016040015282016108b8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461090c57600080fd5b919050565b6000806040838503121561092457600080fd5b61092d836108f5565b946020939093013593505050565b60008060006060848603121561095057600080fd5b610959846108f5565b9250610967602085016108f5565b9150604084013590509250925092565b60006020828403121561098957600080fd5b5035919050565b6000602082840312156109a257600080fd5b610882826108f5565b600080604083850312156109be57600080fd5b6109c7836108f5565b91506109d5602084016108f5565b90509250929050565b600181811c908216806109f257607f821691505b602082108103610a1257634e487b7160e01b600052602260045260246000fd5b50919050565b80516020808301519190811015610a125760001960209190910360031b1b16919050565b600082610a5957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032457610324610a5e565b634e487b7160e01b600052600160045260246000fd5b8082018082111561032457610324610a5e56fea264697066735822122037b1cafb39ec3455286f630cc0da091ce5acf25c1b2c0e70a3ca06f4b70ac54d64736f6c63430008120033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestToken> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<TestToken>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): TestToken {
    return super.attach(address) as TestToken;
  }
  override connect(signer: Signer): TestToken__factory {
    return super.connect(signer) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new utils.Interface(_abi) as TestTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestToken {
    return new Contract(address, _abi, signerOrProvider) as TestToken;
  }
}
